#!/bin/bash

# Define start and end dates
start_date='2023-01-01'
end_date='2023-12-31'

echo "generating commit number for each author"
git shortlog -sne --no-merges --since=$start_date --until=$end_date >> perauthorcommits.txt

# Get a list of all authors (use email as unique identifier)
authors=$(git log --format='%aN <%aE>' | awk -F'<|>' '{print $2}' | sort -u)

# Directory containing the files
dir="authordata"

mkdir $dir
# Loop over all authors
for author in $authors
do
    # Get the number of lines added and deleted by this author within the date range
    echo "Generating all the changes for: $author"
    git log --author="$author" --pretty=tformat: --numstat --since=$start_date --until=$end_date | awk '!/\.json|Generated|generated/' | sort -k1 -nr >> "./authordata/$author.csv"
done

echo "delete empty files"
find ./authordata -type f -empty -delete


# Iterate over each file in the directory
echo "aggregate total lines of code changes for each author"
for file in "$dir"/*
do
  # Use awk to process the file
  filename=$(basename "$file")
  filename="${filename%.*}"
  
  #calculate the total number of lines code changes from the previous per authro change data, one author per line, sort desc by total (add + remove) changes
  awk -v name="$filename " '!/\.json|Generated|generated/ {filechange++; add+=$1; remove+=$2; total+=$1+$2} END { if (add != 0 || remove != 0 || total != 0) printf "name: %s file_changed: %s added_lines: %s removed_lines: %s total_lines: %s \n", name, filechange, add, remove, total}' "$file"
done  | sort -k10 -nr >> perauthorchanges.txt